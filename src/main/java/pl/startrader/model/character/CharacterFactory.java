package pl.startrader.model.character;

import pl.startrader.Dice;

public class CharacterFactory {

    public static Character getCharacter(String role, Integer criminalConnections, Integer politicalConnections,
                                         Integer economicConnections) {

        if (criminalConnections >= 0 && criminalConnections <= 10 &&
                politicalConnections >= 0 && politicalConnections <= 10 &&
                economicConnections >= 0 && economicConnections <= 10) {
            if ("Crew".equalsIgnoreCase(role)) {
                return new Character(Role.CREW, criminalConnections, politicalConnections, economicConnections);
            } else if ("Administrator".equalsIgnoreCase(role)) {
                return new Character(Role.ADMINISTRATOR, criminalConnections, politicalConnections, economicConnections);
            } else if ("Spy".equalsIgnoreCase(role)) {
                return new Character(Role.SPY, criminalConnections, politicalConnections, economicConnections);
            } else {
                System.out.println("Unknown character role.");
                return null;
            }
        } else {
            System.out.println("Connections must be numbers between 0 and 10 included.");
            return null;
        }
    }


    /**
     *
     * @param role  String representation of Role enum - "Crew" / "Administrator" / "Spy" /
     * @param skill String representation of proficiency - "Weak" / "Mediocre" / "Superior" / "Random"
     * @return  Character generated by given attributes.
     */
    public static Character generateCharacter(String role, String skill) {

        Integer criminal;
        Integer political;
        Integer economic;

        if ("Weak".equalsIgnoreCase(skill)) {
            criminal = Dice.getInstance().throwDoubleBorderedDice(1,4);
            political = Dice.getInstance().throwDoubleBorderedDice(1,4);
            economic = Dice.getInstance().throwDoubleBorderedDice(1,4);

            return getCharacter(role, criminal, political, economic);

        } else if ("Mediocre".equalsIgnoreCase(skill)) {
            criminal = Dice.getInstance().throwDoubleBorderedDice(4,7);
            political = Dice.getInstance().throwDoubleBorderedDice(4,7);
            economic = Dice.getInstance().throwDoubleBorderedDice(4,7);

            return getCharacter(role, criminal, political, economic);

        } else if ("Superior".equalsIgnoreCase(skill)) {
            criminal = Dice.getInstance().throwDoubleBorderedDice(7,10);
            political = Dice.getInstance().throwDoubleBorderedDice(7,10);
            economic = Dice.getInstance().throwDoubleBorderedDice(7,10);

            return getCharacter(role, criminal, political, economic);

        } else if ("Random".equalsIgnoreCase(skill)) {
            criminal = Dice.getInstance().throwDoubleBorderedDice(0,10);
            political = Dice.getInstance().throwDoubleBorderedDice(0,10);
            economic = Dice.getInstance().throwDoubleBorderedDice(0,10);

            return getCharacter(role, criminal, political, economic);

        }

        System.out.println("Unknown character skill.");
        return null;
    }
}
